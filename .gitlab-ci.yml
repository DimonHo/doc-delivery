stages:
  - build
  - package
  - deploy

maven-build:
  image: harbor.hnwd.com/library/maven:3.6.1
  stage: build
  only:
    - branches
  script: "mvn package -Dmaven.test.skip=true -B"
  artifacts:
    paths:
      - target/*.jar

docker-build:
  stage: package
  image: docker:latest
  only:
    - branches
  variables:
    DOCKER_DRIVER: overlay
    DOCKER_HOST: tcp://localhost:2375
  services:
    - name: docker:18.09-dind
      command: ["--insecure-registry=harbor.hnwd.com"]
  script:
    - docker info
    - docker login -u "${CI_REGISTRY_USER}" -p "${CI_REGISTRY_PASSWORD}" harbor.hnwd.com
    - docker build -t "${CI_REGISTRY_IMAGE}:latest" .
    - docker tag "${CI_REGISTRY_IMAGE}:latest" "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME}"
    - test ! -z "${CI_COMMIT_TAG}" && docker push "${CI_REGISTRY_IMAGE}:latest"
    - docker push "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME}"

k8s-deploy:
  image: cnych/kubectl
  stage: deploy
  only:
    - branches
  environment:
    name: test
  when: manual
  script:
    - kubectl version
    - cd manifests/
    - sed -i "s/__VERSION__/${CI_COMMIT_REF_NAME}/" deployment.yaml service.yaml
    - |
      if kubectl apply -f deployment.yaml  -n test | grep -q unchanged; then
          echo "=> Patching deployment to force image update."
          kubectl patch -f deployment.yaml -n test -p "{\"spec\":{\"template\":{\"metadata\":{\"annotations\":{\"ci-last-updated\":\"$(date +'%s')\"}}}}}"
      else
          echo "=> Deployment apply has changed the object, no need to force image update."
      fi
    - kubectl apply -f service.yaml -n test || true
    - kubectl rollout status -f deployment.yaml -n test
    - kubectl get all -l app=doc-delivery -n test
